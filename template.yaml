AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app-13

  Sample SAM Template for sam-app-13

Resources:

  LambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
        Policies:
          - PolicyName: allowLambdaLogs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                - logs:*
                Resource: arn:aws:logs:*:*:*
          - PolicyName: allowSqs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
                - sqs:ChangeMessageVisibility
                Resource: !GetAtt MySQSQueue.Arn
  
  MySQSQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: sam-app-queue
      VisibilityTimeout: 300

  MyLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: python3.9
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 128
      Timeout: 30

  MySQSEventSourceMapping:
    Type: 'AWS::Lambda::EventSourceMapping'
    Properties:
      BatchSize: 3
      EventSourceArn: !GetAtt MySQSQueue.Arn
      FunctionName: !GetAtt MyLambdaFunction.Arn
      MaximumBatchingWindowInSeconds: 120
